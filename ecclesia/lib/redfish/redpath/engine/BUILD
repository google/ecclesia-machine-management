licenses(["notice"])

cc_library(
    name = "query_planner_impl",
    srcs = ["query_planner_impl.cc"],
    hdrs = ["query_planner_impl.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":normalizer",
        ":query_planner",
        ":redpath_trie",
        "//ecclesia/lib/redfish:interface",
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_errors_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_result_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_variables_cc_proto",
        "//ecclesia/lib/redfish/dellicius/utils:path_util",
        "//ecclesia/lib/redfish/redpath/definitions/query_engine:redpath_subscription",
        "//ecclesia/lib/redfish/redpath/definitions/query_predicates:filter",
        "//ecclesia/lib/redfish/redpath/definitions/query_predicates:predicates",
        "//ecclesia/lib/redfish/redpath/definitions/query_predicates:variable_substitution",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "//ecclesia/lib/redfish/timing:query_timeout_manager",
        "//ecclesia/lib/redfish/transport:metrical_transport",
        "//ecclesia/lib/status:macros",
        "//ecclesia/lib/time:clock",
        "//ecclesia/lib/time:proto",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/log:die_if_null",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_googlesource_code_re2//:re2",
        "@com_json//:json",
    ],
)

cc_test(
    name = "query_planner_impl_test",
    srcs = ["query_planner_impl_test.cc"],
    data = [
        "//ecclesia/lib/redfish/dellicius/query/samples:sample_malformed_queries_in",
        "//ecclesia/lib/redfish/dellicius/query/samples:sample_queries_in",
        "//ecclesia/lib/redfish/dellicius/query/samples:sample_queries_out",
        "//ecclesia/redfish_mockups/indus_hmb_cn:mockup.shar",
        "//ecclesia/redfish_mockups/indus_hmb_shim:mockup.shar",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":normalizer",
        ":query_planner",
        ":query_planner_impl",
        "//ecclesia/lib/network:testing",
        "//ecclesia/lib/protobuf:parse",
        "//ecclesia/lib/redfish:interface",
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_variables_cc_proto",
        "//ecclesia/lib/redfish/proto:redfish_v1_cc_proto",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "//ecclesia/lib/redfish/testing:fake_redfish_server",
        "//ecclesia/lib/redfish/testing:grpc_dynamic_mockup_server",
        "//ecclesia/lib/redfish/testing:json_mockup",
        "//ecclesia/lib/redfish/transport:cache",
        "//ecclesia/lib/redfish/transport:grpc",
        "//ecclesia/lib/redfish/transport:grpc_tls_options",
        "//ecclesia/lib/redfish/transport:http_redfish_intf",
        "//ecclesia/lib/redfish/transport:interface",
        "//ecclesia/lib/redfish/transport:metrical_transport",
        "//ecclesia/lib/status:macros",
        "//ecclesia/lib/testing:proto",
        "//ecclesia/lib/testing:status",
        "//ecclesia/lib/time:clock",
        "//ecclesia/lib/time:clock_fake",
        "//ecclesia/lib/time:proto",
        "@com_github_grpc_grpc//:grpc++",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_googletest//:gtest_main",
        "@com_google_tensorflow_serving//tensorflow_serving/util/net_http/public:shared_files",
        "@com_google_tensorflow_serving//tensorflow_serving/util/net_http/server/public:http_server_api",
        "@com_json//:json",
    ],
)

cc_library(
    name = "query_planner",
    hdrs = ["query_planner.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":normalizer",
        ":redpath_trie",
        "//ecclesia/lib/redfish:interface",
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_variables_cc_proto",
        "//ecclesia/lib/redfish/redpath/definitions/query_engine:redpath_subscription",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "//ecclesia/lib/time:clock",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/time",
    ],
)

cc_library(
    name = "redpath_trie",
    srcs = ["redpath_trie.cc"],
    hdrs = ["redpath_trie.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/dellicius/utils:join",
        "//ecclesia/lib/status:macros",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/log:die_if_null",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_googlesource_code_re2//:re2",
    ],
)

cc_library(
    name = "normalizer",
    srcs = ["normalizer.cc"],
    hdrs = ["normalizer.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":id_assigner",
        "//ecclesia/lib/redfish:devpath",
        "//ecclesia/lib/redfish:interface",
        "//ecclesia/lib/redfish:node_topology",
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/dellicius/query:query_result_cc_proto",
        "//ecclesia/lib/redfish/dellicius/utils:path_util",
        "//ecclesia/lib/redfish/redpath/definitions/query_result",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "//ecclesia/lib/status:macros",
        "//ecclesia/lib/time:proto",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_protobuf//:protobuf",
        "@com_json//:json",
    ],
)

cc_library(
    name = "id_assigner",
    hdrs = ["id_assigner.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//ecclesia/lib/redfish/redpath/definitions/query_result",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "redpath_trie_test",
    srcs = ["redpath_trie_test.cc"],
    deps = [
        ":redpath_trie",
        "//ecclesia/lib/protobuf:parse",
        "//ecclesia/lib/redfish/dellicius/query:query_cc_proto",
        "//ecclesia/lib/redfish/redpath/definitions/query_result:query_result_cc_proto",
        "//ecclesia/lib/testing:status",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)
